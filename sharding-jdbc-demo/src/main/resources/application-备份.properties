# basic setting
server.port=8014
spring.application.name=sharding-jdbc-demo
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
mybatis-plus.type-aliases-package=com.maple.mp.entity

# pattern
spring.shardingsphere.mode.type=Memory
# print log
spring.shardingsphere.props.sql-show=true
spring.main.allow-bean-definition-overriding=true

# key-id setting
spring.shardingsphere.rules.sharding.key-generators.key-id-alg.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.key-id-alg.props.worker.id=1

# db setting
spring.shardingsphere.datasource.names=m0,m1,m2
spring.shardingsphere.datasource.m0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m0.jdbc-url=jdbc:mysql://${ENV_CLOUD_IP}:3306/demo?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.m0.username=root
spring.shardingsphere.datasource.m0.password=123456

spring.shardingsphere.datasource.m1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.jdbc-url=jdbc:mysql://${ENV_CLOUD_IP}:3307/sharding_1?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=123456

spring.shardingsphere.datasource.m2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.jdbc-url=jdbc:mysql://${ENV_CLOUD_IP}:3307/sharding_2?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=123456

# logic table setting
spring.shardingsphere.rules.sharding.tables.user.actual-data-nodes=m0.user
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=m1.t_order
spring.shardingsphere.rules.sharding.tables.item.actual-data-nodes=m1.item

spring.shardingsphere.rules.sharding.tables.course.actual-data-nodes=m$->{[1,2]}.course_$->{0..2}

# db sharding column filed
spring.shardingsphere.rules.sharding.tables.course.database-strategy.standard.sharding-column=id
# db sharding algorithm name
spring.shardingsphere.rules.sharding.tables.course.database-strategy.standard.sharding-algorithm-name=db_id_alg
# DB-select algorithm(db_id_alg) type : Line expression
spring.shardingsphere.rules.sharding.sharding-algorithms.db_id_alg.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.db_id_alg.props.algorithm-expression=m$->{id % 2 + 1}


# table sharding column filed
spring.shardingsphere.rules.sharding.tables.course.table-strategy.standard.sharding-column=id
# table sharding algorithm name
spring.shardingsphere.rules.sharding.tables.course.table-strategy.standard.sharding-algorithm-name=table_id_alg
# Table-select algorithm(table_id_alg) type : Line expression
spring.shardingsphere.rules.sharding.sharding-algorithms.table_id_alg.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table_id_alg.props.algorithm-expression=course_$->{id % 3}
# allow-range-query-with-inline-sharding
spring.shardingsphere.rules.sharding.sharding-algorithms.table_id_alg.props.allow-range-query-with-inline-sharding=true

# table id setting
spring.shardingsphere.rules.sharding.tables.course.key-generate-strategy.column=id
spring.shardingsphere.rules.sharding.tables.course.key-generate-strategy.key-generator-name=key-id-alg

